<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<!--
	- Application context definition for JPetStore's data access layer.
	- Accessed by business layer objects defined in "applicationContext.xml"
	- (see web.xml's "contextConfigLocation").
	-
	- This version of the data access layer works on a combined database,
	- using a local DataSource with DataSourceTransactionManager. It does not
	- need any JTA support in the container: It will run as-is in plain Tomcat.
-->
<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Local Apache Commons DBCP DataSource that refers to a combined database -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
        <property name="jndiName" value="jdbc/om"/>
        <property name="lookupOnStartup" value="false"/>
        <property name="cache" value="true" />
        <property name="proxyInterface"  value="javax.sql.DataSource" />
    </bean> 
	-->

	<!-- The placeholders are resolved from jdbc.properties through -->
	<!-- the PropertyPlaceholderConfigurer in applicationContext.xml -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		
       	<property name="validationQuery" value="${jdbc.validationQuery}" />
       	<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
       	<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
       	<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
	</bean>
	
	<!-- Transaction manager for a single JDBC DataSource -->
	<!-- (see dataAccessContext-jta.xml for an alternative)
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	-->
	<!-- SqlMap setup for iBATIS Database Layer
	<bean id="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"
			value="WEB-INF/sql-map-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	-->
	<!-- ========================= DAO DEFINITIONS: IBATIS IMPLEMENTATIONS =========================

	<bean id="accountDao"
		class="com.java.frame.dao.ibatis.SqlMapAccountDao">
		<property name="sqlMapClient" ref="sqlMapClient" />
		<property name="sequenceDao" ref="sequenceDao" />
	</bean>
	-->
	<!-- Refers to the combined database here -->
	<!-- (see dataAccessContext-jta.xml for an alternative)
	<bean id="sequenceDao"
		class="com.java.frame.dao.ibatis.OracleSequenceDao">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
	-->

</beans>
