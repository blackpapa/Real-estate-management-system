<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<!-- bean define start-->
	<bean id="baseDataSourceService" class="com.java.base.service.BaseDataSourceServiceImpl"/>
	<bean id="exceptionHandler" class="com.java.framework.exception.ExceptionHandler"/>
	<!-- bean define end-->
	<bean id="buildingManagementService" class="com.java.resm.service.BuildingManagementServiceImpl"/>
	<bean id="bouseManagementService" class="com.java.resm.service.HouseManagementServiceImpl"/>
	<bean id="customerMangementService" class="com.java.resm.service.CustomerMangementServiceImpl"/>
	<bean id="buyHouseManagementService" class="com.java.resm.service.BuyHouseManagementServiceImpl"/>
	<!-- spring cache define begin -->
	<!-- <bean id="oscacheFacade" class="org.springmodules.cache.provider.oscache.OsCacheFacade">
		<property name="failQuietlyEnabled" value="true"/>
		<property name="cacheManager">
		<bean id="oscacheManager" class="org.springmodules.cache.provider.oscache.OsCacheManagerFactoryBean"/>
		</property>
	</bean> -->

	<!-- 
	<bean id="productCachingInterceptor" class="org.springmodules.cache.interceptor.caching.MethodMapCachingInterceptor">
		<property name="cacheProviderFacade" ref="oscacheFacade"/>
		<property name="cachingModels">
			<props>
				<prop key="com.java.lining.dhh.service.LoadProductService.load*">groups=products;refreshPeriod=36000</prop>
			</props>
		</property>
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<value>loadProductService</value>
		</property>
		<property name="interceptorNames">
           <list>
               <value>productCachingInterceptor</value>
 			</list>
		</property>
	</bean>
	-->
   <bean id="multipartResolver" class="com.java.tools.upload.RoutesMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>300000000</value>
		</property>
	</bean>
    <bean name="uploadService" class="com.java.resm.upload.UploadServiceImpl">
		<property name="importMap">
			<map>
				<!-- 导入 -->
				<!-- 搭配款规则 -->
				<!-- <entry key="combineStyleRule" value-ref="combinationStyleRuleImportService" /> -->
			</map>
		</property>
	</bean>
	<!-- spring cache define end -->
    <aop:config>
        <aop:aspect id="liningOperationLog" ref="operationLogAspec">
            <aop:pointcut expression="execution(* com.java.resm.action.*.*(..))" id="liningLogCut"/>
            <aop:after method="log" pointcut-ref="liningLogCut"/>
       </aop:aspect>
       <aop:aspect id="liningPermit" ref="permitAspec">
            <aop:pointcut expression="execution(* com.java.resm.action.*.*(..))" id="liningPermitCut"/>
            <aop:before method="check" pointcut-ref="liningPermitCut"/>
       </aop:aspect>
    </aop:config>
	<aop:config>
		<aop:pointcut id="liningMethods"
			expression="(execution(* com.java.resm.service.*Impl.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="liningMethods" />
	</aop:config>

</beans>
